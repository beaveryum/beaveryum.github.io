import{_ as r,c as a,a as e,b as s,t as i,o}from"./app.ff46b2ef.js";const y=JSON.parse('{"title":"ref vs reactive","description":"","frontmatter":{"title":"ref vs reactive"},"headers":[],"relativePath":"vue3/ref vs reactive.md","lastUpdated":1674640550000}'),n={name:"vue3/ref vs reactive.md"},c={id:"frontmatter-title",tabindex:"-1"},l=e("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=e("p",null,"강의에서 처럼 ref vs reactive는 둘다 반응형상태를 만드는데 사용합니다.",-1),_=e("p",null,"차이점은 ref 는.value 가 붙고, reactive는 .value가 붙지 않습니다.",-1),v=e("p",null,"그렇기 때문에 reactive로 Primitive Type(number, string, boolean ...)반응형 상태를 선언시 반응성이 유지되지 않습니다.",-1),p=e("p",null,"반면 ref는 .value로 접근하기에 Primitive Type은 물론이고 Object Type도 선언할 수 있습니다.",-1);function f(t,u,h,m,b,$){return o(),a("div",null,[e("h1",c,[s(i(t.$frontmatter.title)+" ",1),l]),d,_,v,p])}const T=r(n,[["render",f]]);export{y as __pageData,T as default};
