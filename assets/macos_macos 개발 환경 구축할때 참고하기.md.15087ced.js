import{_ as e,c as n,a as s,b as l,t as p,d as o,o as t}from"./app.86428379.js";const D=JSON.parse('{"title":"macos 개발 환경 구축할때 참고하기","description":"","frontmatter":{"title":"macos 개발 환경 구축할때 참고하기"},"headers":[{"level":2,"title":"참고 자료 :","slug":"참고-자료","link":"#참고-자료","children":[]}],"relativePath":"macos/macos 개발 환경 구축할때 참고하기.md","lastUpdated":1674745074000}'),c={name:"macos/macos 개발 환경 구축할때 참고하기.md"},r={id:"frontmatter-title",tabindex:"-1"},i=s("a",{class:"header-anchor",href:"#frontmatter-title","aria-hidden":"true"},"#",-1),d=o(`<p>우선 맥에서는 개발 환경을 만들려면 일시적으로 하는 방법과 영구적으로 설치하는 방법이 있다.</p><p>일시적인 방법은 그냥 터미널에서 해당 경로를 시스템 환경 변수에 등록 해서 사용하면 되는데 단, os를 재 시작 하면 초기화가 되서 문제 될 경우가 있다.</p><p>(아래 명령어는 예시로 만든거다 테스트 할때 경로를 제대로 지정하길..)</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$PATH</span><span style="color:#C3E88D;">:~/Downloads/.....</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>반대로 영구적으로 하는 방법은 아래 설명을 보면 된다.</p><p>현재 사용 중인 쉘을 알아 보자</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $SHELL</span></span>
<span class="line"></span></code></pre></div><p>결과 Bash이면 ~/.bash_profile 이나 ~/.bashrc를 수정하면 되고 bin/zsh이면 ~/.zshrc 파일을 수정하면 된다.</p><p>내껀 bin/zsh 으로 나왔다. ~/.zshrc 로 편집 하면된다.</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#FFCB6B;">vi</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.zshrc</span></span>
<span class="line"></span></code></pre></div><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#C792EA;">export</span><span style="color:#A6ACCD;"> PATH</span><span style="color:#89DDFF;">=</span><span style="color:#89DDFF;">&quot;</span><span style="color:#A6ACCD;">$PATH</span><span style="color:#C3E88D;">:~/Downloads/....</span><span style="color:#89DDFF;">&quot;</span></span>
<span class="line"></span></code></pre></div><p>이후에 설정 파일을 새로 고침 하면 된다. (중요하다)</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">source</span><span style="color:#A6ACCD;"> </span><span style="color:#C3E88D;">~/.zshrc</span></span>
<span class="line"></span></code></pre></div><p>설치가 됐는지 확인 하려면 아래 명령어로...</p><div class="language-bash"><button title="Copy Code" class="copy"></button><span class="lang">bash</span><pre class="shiki material-palenight"><code><span class="line"><span style="color:#82AAFF;">echo</span><span style="color:#A6ACCD;"> $PATH</span></span>
<span class="line"></span></code></pre></div><h2 id="참고-자료" tabindex="-1">참고 자료 : <a class="header-anchor" href="#참고-자료" aria-hidden="true">#</a></h2><p><a href="https://velog.io/@taelee/%ED%99%98%EA%B2%BD-%EB%B3%80%EC%88%98-%EC%84%A4%EC%A0%95-Mac" target="_blank" rel="noreferrer">https://velog.io/@taelee/환경-변수-설정-Mac</a></p>`,17);function h(a,_,C,y,A,b){return t(),n("div",null,[s("h1",r,[l(p(a.$frontmatter.title)+" ",1),i]),d])}const g=e(c,[["render",h]]);export{D as __pageData,g as default};
